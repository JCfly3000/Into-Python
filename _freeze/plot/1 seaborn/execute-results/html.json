{
  "hash": "7b792aa27a6ed9e8cef0ea2d028554bd",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"seaborn chart\"\nexecute:\n  warning: false\n  error: false\n  eval: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n![](images/logo-wide-lightbg.svg)\n\nSeaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.\n\n::: {#d05d283f .cell execution_count=1}\n``` {.python .cell-code}\nimport seaborn as sns\nprint(sns.__version__)\n```\n:::\n\n\n::: {#9c29cda6 .cell execution_count=2}\n``` {.python .cell-code}\n# Import seaborn\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib\n\n# Apply the default theme\n#sns.set_theme()\n\n# Load an example dataset\ntips = sns.load_dataset(\"tips\")\ntips.head()\n```\n:::\n\n\n# Scatter Plot\n\n::: {#6420c4b7 .cell execution_count=3}\n``` {.python .cell-code}\nsns.scatterplot(data=tips,x='tip',y='total_bill')\n```\n:::\n\n\n## color by group\n\n::: {#d1e3d121 .cell execution_count=4}\n``` {.python .cell-code}\nsns.scatterplot(data=tips,x='tip',y='total_bill',hue='sex')\n```\n:::\n\n\n## size by group\n\n::: {#cd7e9e30 .cell execution_count=5}\n``` {.python .cell-code}\nsns.scatterplot(data=tips,x='tip',y='total_bill',size='size')\n```\n:::\n\n\n# line Plot\n\n::: {#e7bb9f44 .cell execution_count=6}\n``` {.python .cell-code}\ndowjones= sns.load_dataset(\"dowjones\")\ndowjones.head()\n```\n:::\n\n\n::: {#2bad0d6d .cell execution_count=7}\n``` {.python .cell-code}\nsns.lineplot(data=dowjones,x='Date',y='Price')\n```\n:::\n\n\n## color by group\n\n::: {#79fdd70e .cell execution_count=8}\n``` {.python .cell-code code-fold=\"true\"}\nimport random\nfrom siuba import _, mutate, filter, group_by, summarize,show_query\nfrom siuba import *\n\ndowjones2=dowjones>>mutate(type='old')\n\ndowjones3=dowjones>>mutate(Price=_.Price+random.random()*200,type='new')\n\ndowjones4=pd.concat([dowjones2, dowjones3], ignore_index = True)>> arrange(_.Date)\n```\n:::\n\n\n::: {#bc973767 .cell execution_count=9}\n``` {.python .cell-code}\ndowjones4.head()\n```\n:::\n\n\n::: {#9997bfe2 .cell execution_count=10}\n``` {.python .cell-code}\nsns.lineplot(data=dowjones4,x='Date',y='Price',hue='type')\n```\n:::\n\n\n# histogram\n\n::: {#24734655 .cell execution_count=11}\n``` {.python .cell-code}\nsns.histplot(data=tips,x='tip')\n```\n:::\n\n\n## color by group\n\n::: {#59b53367 .cell execution_count=12}\n``` {.python .cell-code}\nsns.histplot(data=tips,x='tip',hue='sex',multiple=\"dodge\")\n```\n:::\n\n\n# bar chart\n\n::: {#e84ef215 .cell execution_count=13}\n``` {.python .cell-code}\nsns.barplot(data=tips,x='sex',y='tip',errorbar=None)\n```\n:::\n\n\n## show number\n\n::: {#518cfbad .cell execution_count=14}\n``` {.python .cell-code}\nax=sns.barplot(data=tips,x='sex',y='tip',errorbar=None)\n\nfor i in ax.containers:\n    ax.bar_label(i,)\n\n```\n:::\n\n\n## horizontal bar plot \n\n::: {#9c88aeee .cell execution_count=15}\n``` {.python .cell-code}\nax=sns.barplot(data=tips,y='sex',x='tip',errorbar=None,orient = 'h')\nplt.show()\n```\n:::\n\n\n# box plot\n\n::: {#908942f0 .cell execution_count=16}\n``` {.python .cell-code}\nsns.boxplot(data=tips,x='day',y='tip')\n```\n:::\n\n\n## color by group\n\n::: {#bea3123b .cell execution_count=17}\n``` {.python .cell-code}\nsns.boxplot(data=tips,x='day',y='tip',hue='sex')\n```\n:::\n\n\n# strip plot\n\n::: {#6430e866 .cell execution_count=18}\n``` {.python .cell-code}\nsns.stripplot(data=tips,x='day',y='tip')\n```\n:::\n\n\n## color by group\n\n::: {#06ed7e63 .cell execution_count=19}\n``` {.python .cell-code}\nsns.stripplot(data=tips,x='day',y='tip',hue='sex',dodge=True)\n```\n:::\n\n\njoin plot\n\n::: {#3d787069 .cell execution_count=20}\n``` {.python .cell-code}\nsns.jointplot(data=tips,x='total_bill',y='tip',kind='reg')\n```\n:::\n\n\n# Facet plot\n\n::: {#a0860827 .cell execution_count=21}\n``` {.python .cell-code}\ng = sns.FacetGrid(data=tips, col=\"day\", hue=\"sex\")\n\ng.map_dataframe(sns.scatterplot, x=\"total_bill\", y=\"tip\")\n\ng.add_legend()\n```\n:::\n\n\nmake 2 plot per column\n\n::: {#dd8b7a78 .cell execution_count=22}\n``` {.python .cell-code}\ng = sns.FacetGrid(data=tips, col=\"day\",col_wrap=2, hue=\"sex\")\n\ng.map_dataframe(sns.scatterplot, x=\"total_bill\", y=\"tip\")\n\ng.add_legend()\n```\n:::\n\n\nsub plot\n\n::: {#1e71968f .cell execution_count=23}\n``` {.python .cell-code}\n#sns.set()\n\n#define plotting region (1 rows, 2 columns)\nfig, axes = plt.subplots(1, 2)\n\n\nsns.boxplot(data=tips,x='day',y='tip',hue='sex',ax=axes[0])\nsns.boxplot(data=tips,x='day',y='tip',ax=axes[1])\n```\n:::\n\n\n# chinese 显示中文 in Mac\n\n::: {#755703da .cell execution_count=24}\n``` {.python .cell-code}\n# add following line\nplt.rcParams['font.family'] = ['Arial Unicode MS'] #用来正常显示中文标签\nplt.rcParams['axes.unicode_minus'] = False #用来正常显示负号\nsns.set_style('whitegrid',{'font.sans-serif':['Arial Unicode MS','Arial']})\n\n```\n:::\n\n\n# title,size,x y name\n\n## add title\n\n::: {#d534f6b6 .cell execution_count=25}\n``` {.python .cell-code}\ndf = sns.load_dataset(\"tips\")\n\nax=sns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n\nax.set_title(\"tips box plot \")\n```\n:::\n\n\n## adjust size\n\n::: {#f96c676b .cell execution_count=26}\n``` {.python .cell-code}\nplt.clf()\n\nplt.figure(figsize=(10, 6))\n\nax=sns.boxplot(x = \"day\", y = \"total_bill\", data = df)\nax.set_title(\"tips box plot \")\n\nplt.show()\n```\n:::\n\n\n## change x y name\n\n::: {#b96b2c43 .cell execution_count=27}\n``` {.python .cell-code}\nax=sns.boxplot(x = \"day\", y = \"total_bill\", data = df)\nax.set_title(\"tips box plot \")\nax.set(xlabel='x-axis label', ylabel='y-axis label')\n```\n:::\n\n\n# applying themes\n\n::: {.panel-tabset .nav-pills}\n\n## darkgrid themes\n\nIf you set the set_style function without any arguments the \"darkgrid\" theme will be used by default, which adds a gray background and white grid lines.\n\n::: {#5c29a145 .cell execution_count=28}\n``` {.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"tips\")\n\nsns.set_theme()\n# Equivalent to:\n# sns.set_style(\"darkgrid\")\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n```\n:::\n\n\n## whitegrid themes\n\nIf you want to add gray grid lines but with a white background set this theme.\n\n::: {#f4090818 .cell execution_count=29}\n``` {.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"tips\")\nsns.set_style(\"whitegrid\")\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n```\n:::\n\n\n## dark themes\n\nThe \"dark\" theme is the same as \"darkgrid\" but without the grid lines.\n\n::: {#0da17dda .cell execution_count=30}\n``` {.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"tips\")\n\nsns.set_style(\"dark\")\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n```\n:::\n\n\n## white themes\n\nThe \"white\" theme is the same as \"whitegrid\" but without the gray grid lines.\n\n::: {#47d6f3e8 .cell execution_count=31}\n``` {.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"tips\")\n\nsns.set_style(\"white\")\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n```\n:::\n\n\n## ticks themes\n\nThe \"ticks\" theme is the same as the \"white\" theme but this theme adds ticks to the axes.\n\n::: {#4c2c6d7b .cell execution_count=32}\n``` {.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"tips\")\n\nsns.set_style(\"ticks\")\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n```\n:::\n\n\n## fivethirtyeight themes\n\n::: {#e9cc4e0d .cell execution_count=33}\n``` {.python .cell-code}\nplt.clf()\n\nplt.style.use('fivethirtyeight')\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n\nplt.show()\n```\n:::\n\n\n## ggplot\n\n::: {#6287d305 .cell execution_count=34}\n``` {.python .cell-code}\nplt.clf()\n\nplt.style.use('ggplot')\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\nfig.tight_layout()\nplt.show()\n```\n:::\n\n\n## tableau-colorblind10\n\n::: {#d4bd088b .cell execution_count=35}\n``` {.python .cell-code}\nplt.clf()\nplt.style.use('tableau-colorblind10')\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\nfig.tight_layout()\nplt.show()\n```\n:::\n\n\n## dark_background\n\n::: {#690cb63c .cell execution_count=36}\n``` {.python .cell-code}\nplt.clf()\nplt.style.use('dark_background')\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\nfig.tight_layout()\nplt.show()\n```\n:::\n\n\n:::\n\n\n# Save plot\n\n::: {#4ef588cb .cell execution_count=37}\n``` {.python .cell-code}\nimport seaborn as sns\n\ndf = sns.load_dataset(\"tips\")\n\nplt.clf()\n\nplt.style.use('default')\n\nsns.boxplot(x = \"day\", y = \"total_bill\", data = df)\n\n# Save the plot with desired size\nplt.savefig(\"output.png\", dpi=100, bbox_inches=\"tight\")\n\n```\n:::\n\n\n# Animation plot\n\n::: {#93c746fc .cell execution_count=38}\n``` {.python .cell-code}\nfrom celluloid import Camera\n```\n:::\n\n\n::: {#84472f23 .cell execution_count=39}\n``` {.python .cell-code}\nfrom celluloid import Camera\nfrom matplotlib import pyplot as plt\n\nfig = plt.figure()\n\ncamera = Camera(fig)\n\na=sns.lineplot(data=dowjones4,x='Date',y='Price',hue='type')\n\nhands, labs = a.get_legend_handles_labels()\n\nnew_data=dowjones4.sample(50, random_state=42)\n\nnew_data=new_data.sort_values(by=['Date'], ascending=True)\n\nfor i in (new_data[\"Date\"]):\n  data=dowjones4.query('Date <= @i')\n  #print(data)\n  sns.lineplot(data=data,x='Date',y='Price',hue='type')\n  plt.legend(handles=hands, labels=labs)\n  camera.snap()\n\nanimation = camera.animate()\n```\n:::\n\n\n::: {#8e80689a .cell execution_count=40}\n``` {.python .cell-code}\nfrom IPython.display import HTML\nHTML(animation.to_html5_video())\n```\n:::\n\n\n# reference:\n\nhttps://seaborn.pydata.org/index.html\n\nhttps://www.youtube.com/watch?v=ooqXQ37XHMM\n\n",
    "supporting": [
      "1 seaborn_files"
    ],
    "filters": [],
    "includes": {}
  }
}