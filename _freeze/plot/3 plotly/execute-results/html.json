{
  "hash": "fe3d11eb6a8e62a959204290d40f980b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Plotly chart\"\nexecute:\n  warning: false\n  error: false\n  eval: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n![](images/Plotly-logo.png){width=\"650\"}\n\nPlotly's Python graphing library makes interactive, publication-quality graphs. Examples of how to make line plots, scatter plots, area charts, bar charts, error bars, box plots, histograms, heatmaps, subplots, multiple-axes, polar charts, and bubble charts.\n\n::: {#ba297f88 .cell execution_count=1}\n``` {.python .cell-code}\nimport plotly\nprint(plotly.__version__)\n```\n:::\n\n\n::: {#43d17331 .cell execution_count=2}\n``` {.python .cell-code}\nfrom plotnine import *\nimport seaborn as sns\nimport plotly.express as px\nimport pandas as pd\n\n# Apply the default theme\n\n\n# Load an example dataset\ntips = sns.load_dataset(\"tips\")\ntips.head()\n```\n:::\n\n\n# Scatter Plot\n\n::: {#dc3c651c .cell execution_count=3}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\")\nfig.show()\n```\n:::\n\n\n## color by group\n\n::: {#f9bfec2f .cell execution_count=4}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\",color=\"sex\")\nfig.show()\n```\n:::\n\n\n## size by group\n\n::: {#27c83414 .cell execution_count=5}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\",size=\"size\")\nfig.show()\n```\n:::\n\n\n# line Plot\n\n::: {#a6a1cf33 .cell execution_count=6}\n``` {.python .cell-code}\ndowjones= sns.load_dataset(\"dowjones\")\ndowjones.head()\n```\n:::\n\n\n::: {#d674d48c .cell execution_count=7}\n``` {.python .cell-code}\nimport plotly.express as px\nfig = px.line(dowjones, x=\"Date\", y=\"Price\")\nfig.show()\n```\n:::\n\n\n## color by group\n\n::: {#c4198e30 .cell execution_count=8}\n``` {.python .cell-code code-fold=\"true\"}\nimport random\nfrom siuba import _, mutate, filter, group_by, summarize,show_query\nfrom siuba import *\n\ndowjones2=dowjones>>mutate(type='old')\n\ndowjones3=dowjones>>mutate(Price=_.Price+random.random()*200,type='new')\n\ndowjones4=pd.concat([dowjones2, dowjones3], ignore_index = True)>> arrange(_.Date)\n\ndf = px.data.gapminder().query(\"continent=='Oceania'\")\n```\n:::\n\n\n::: {#12fb5ba8 .cell execution_count=9}\n``` {.python .cell-code}\ndowjones4.head()\n```\n:::\n\n\n::: {#aab4f339 .cell execution_count=10}\n``` {.python .cell-code}\nimport plotly.express as px\n\nfig = px.line(dowjones4, x=\"Date\", y=\"Price\", color='type')\nfig.show()\n```\n:::\n\n\n# histogram\n\n::: {#f3b6f203 .cell execution_count=11}\n``` {.python .cell-code}\nfig = px.histogram(tips, x=\"total_bill\")\nfig.show()\n```\n:::\n\n\n## color by group\n\n::: {#7c94c8d2 .cell execution_count=12}\n``` {.python .cell-code}\nfig = px.histogram(tips, x=\"total_bill\", color='sex', barmode='group')\nfig.show()\n```\n:::\n\n\n# bar chart\n\n::: {#6d755bca .cell execution_count=13}\n``` {.python .cell-code}\nfig = px.bar(tips, x='sex', y='total_bill',color='sex')\nfig.show()\n```\n:::\n\n\n# box plot\n\n::: {#95aef71f .cell execution_count=14}\n``` {.python .cell-code}\nfig = px.box(tips, y=\"total_bill\")\nfig.show()\n```\n:::\n\n\n## color by group\n\n::: {#55764c87 .cell execution_count=15}\n``` {.python .cell-code}\nfig = px.box(tips, y=\"total_bill\",x='sex',color='sex')\nfig.show()\n```\n:::\n\n\n# strip plot\n\n::: {#6dbcaa55 .cell execution_count=16}\n``` {.python .cell-code}\nfig = px.strip(tips,x=\"day\", y=\"total_bill\")\nfig.show()\n```\n:::\n\n\n## color by group\n\n::: {#3d45e5f9 .cell execution_count=17}\n``` {.python .cell-code}\nfig = px.strip(tips,x=\"day\", y=\"total_bill\",color='sex')\nfig.show()\n```\n:::\n\n\n# Facet plot\n\n::: {#103fdead .cell execution_count=18}\n``` {.python .cell-code}\nfig = px.scatter(tips, x=\"total_bill\", y=\"tip\", color=\"sex\", facet_col=\"day\")\nfig.show()\n```\n:::\n\n\nmake 3 plot per row\n\n::: {#23e4aa31 .cell execution_count=19}\n``` {.python .cell-code}\nfig = px.scatter(tips, x=\"total_bill\", y=\"tip\", color=\"sex\", facet_col=\"day\",facet_col_wrap=3)\nfig.show()\n```\n:::\n\n\n# title,size, x y names\n\n## add title\n\n::: {#0fab667c .cell execution_count=20}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\", title=\"total_bill title\").update_layout(title_x=0.5)\nfig.show()\n```\n:::\n\n\n## adjust size\n\n::: {#802db52f .cell execution_count=21}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\")\n\nfig.update_layout(\n    autosize=False\n    ,width=200\n    ,height=200\n    )\n    \nfig.show()\n\n```\n:::\n\n\n## change x y name\n\n::: {#4e41b8f1 .cell execution_count=22}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\"\n                ,labels={\n                     \"tip\": \"new x label)\",\n                     \"total_bill\": \"new y label\"\n                 }\n\n)\n\n    \nfig.show()\n```\n:::\n\n\n# applying themes:\n\n::: {.panel-tabset .nav-pills}\n\n## ggplot2 themes\n\n::: {#c6bd442c .cell execution_count=23}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\",template=\"ggplot2\")\nfig.show()\n```\n:::\n\n\n## seaborn themes\n\n::: {#8b73d3c8 .cell execution_count=24}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\",template=\"seaborn\")\nfig.show()\n```\n:::\n\n\n## plotly_dark themes\n\n::: {#e6c35145 .cell execution_count=25}\n``` {.python .cell-code}\nfig = px.scatter(tips,x=\"tip\", y=\"total_bill\",template=\"plotly_dark\")\nfig.show()\n```\n:::\n\n\n:::\n\n# Save plot\n\ninstall package with pip install -U kaleido\n\n::: {#0970b5c9 .cell execution_count=26}\n``` {.python .cell-code}\nfig = px.line(df, x=\"year\", y=\"lifeExp\", title='Life expectancy in Canada')\nfig.write_image(\"yourfile.png\") \n```\n:::\n\n\n# Animation plot only \n\nhttps://plotly.com/python/animations/\n\nAlthough Plotly Express supports animation for many chart and map types, smooth inter-frame transitions are today only possible for scatter and bar\n\n::: {#3f417f42 .cell execution_count=27}\n``` {.python .cell-code}\nimport plotly.express as px\ndf = px.data.gapminder()\npx.scatter(df, x=\"gdpPercap\", y=\"lifeExp\", animation_frame=\"year\", animation_group=\"country\",\n           size=\"pop\", color=\"continent\", hover_name=\"country\",\n           log_x=True, size_max=55, range_x=[100,100000], range_y=[25,90])\n```\n:::\n\n\n# reference:\n\nhttps://plotly.com/python/\n\n",
    "supporting": [
      "3 plotly_files"
    ],
    "filters": [],
    "includes": {}
  }
}